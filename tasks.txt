Task 1: Basic Structure (5 Marks)
[Done] ● Create an HTML file named "index.html" with the basic structure of an HTML document.
[DONE] ● Set meaningful titles and include appropriate meta tags.
Task 2: Header (5 Marks)
[DONE] ● Include a catchy title reflecting the system's purpose, such as "Student Registration
System."
● Add a brief description summarizing the system's functionalities.
Task 3: Form and Input Fields (5 Marks)
[DONE] ● Develop a form with input fields for student details, including Student name, student ID,
email ID, and Contact No. Ensure appropriate styling and layout for a better user
experience.
Task 4: Display Section (10 Marks)
[DONE] ● Please include a section to display registered student records. You can place it either on
the same page or on a different page. If it's on a different page, please add a link to
access it in the navigation bar.
[DONE] ● Display student details such as Student name, student ID, email ID, and Contact No. in a
clear and organized manner.
Task 5: Styling and Design (10 Marks)
● Apply CSS styling to enhance the visual appeal of the registration system.
● Ensure proper spacing, alignment, and use of colors for better readability.
Task 6: JavaScript Functionality (35 Marks)
[Done] ● Implement functionality to add new student records.
[Done] ● Allow users to edit existing records.
[Done] ● Provide options for deleting records.
[Done] ● After refreshing the page data should not disappear ( you can use local storage).
[Done] ● Validate input fields to ensure student ID and contact number accept only numbers,
student name accepts only characters, and email accepts only valid email addresses.
[Done] ● Make sure the user can't add the empty row.
[Done] ● Add a vertical scrollbar dynamically.
Task 7: Documentation and Comments (5 Marks)
● Organized file structure
● Creativity and Presentation
● Include comments in the code to explain complex sections or logic.
● Please upload your project to GitHub and provide the GitHub link. Failure to do so
will result in marks being deducted.
Assessment:
Marks will be assigned for each task based on adherence to guidelines, creativity, presentation,
and overall quality of the system.
Submission Guidelines:
● Submit a zip file containing all HTML files, CSS file, and JavaScript file.
● Ensure code readability and organization, including appropriate comments for complex
sections.
[DONE] ● Use semantic HTML tags for better accessibility.
[DONE] ● Test the system thoroughly to ensure proper functionality